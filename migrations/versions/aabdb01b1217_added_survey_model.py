"""added survey model

Revision ID: aabdb01b1217
Revises: 7aa2af67e2db
Create Date: 2025-10-12 16:44:53.390052

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aabdb01b1217'
down_revision: Union[str, Sequence[str], None] = '7aa2af67e2db'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fs_surveys',
    sa.Column('id_survey', sa.Integer(), nullable=False),
    sa.Column('survey_name', sa.String(length=50), nullable=False),
    sa.Column('creation_date', sa.Date(), nullable=False),
    sa.Column('configuration_date', sa.Date(), nullable=True),
    sa.Column('survey_state', sa.Integer(), nullable=False),
    sa.Column('introductory_text', sa.Text(), nullable=True),
    sa.Column('terms_conditions', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id_survey')
    )
    op.drop_table('fs_users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fs_users',
    sa.Column('id_user', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('names', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('last_names', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('identification_type', sa.VARCHAR(length=5), autoincrement=False, nullable=False),
    sa.Column('identification', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('creation_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('update_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('user_state', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id_role', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_role'], ['fs_roles.id_role'], name=op.f('fk_role'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id_user', name=op.f('fs_users_pkey')),
    sa.UniqueConstraint('email', name=op.f('fs_users_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('identification', name=op.f('fs_users_identification_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('fs_surveys')
    # ### end Alembic commands ###
